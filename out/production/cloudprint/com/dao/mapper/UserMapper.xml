<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.UserDao">


    <resultMap id="ProviderByRef" type="Provider" autoMapping="true">
        <id column="p_id" property="id"/>
        <id column="p_email" property="email"/>
        <id column="p_password" property="password"/>
        <id column="p_name" property="name"/>
        <id column="p_createTime" property="createTime"/>
        <id column="p_updateTime" property="updateTime"/>
    </resultMap>

    <resultMap id="UserByRef" type="User" autoMapping="true">
        <id column="id" property="id"/>
        <association property="provider" column="p_id" resultMap="ProviderByRef"/>
    </resultMap>

    <select id="findById" parameterType="int" resultMap="UserByRef">
        <!-->联合查询中大量重复字段的解决方案<-->
        <!-->t1原样输出，t2中和t1重复的字段as别名，不重复字段的不用给,可以autoMapping<-->
       SELECT t1.* , t2.id AS p_id , t2.email AS p_email , t2.password AS p_password , t2.name AS p_name , t2.address , t2.openTime , t2.closeTime ,t2.createTime AS p_createTime , t2.updateTime as p_createTime
       FROM users t1 LEFT JOIN providers t2 ON t1.providerId = t2.id
       WHERE t1.id = #{value}
    </select>

    <select id="findByName" parameterType="String" resultType="User">
        SELECT * FROM Users
        WHERE name LIKE concat('%',#{value},'%')
    </select>

    <select id="findAll" parameterType="int" resultMap="UserByRef">
        <choose>
          <when test="_parameter == 0">
              SELECT * FROM users;
          </when>
          <otherwise>
              SELECT t1.* , t2.id AS p_id , t2.email AS p_email , t2.password AS p_password , t2.name AS p_name , t2.address , t2.openTime , t2.closeTime ,t2.createTime AS p_createTime , t2.updateTime AS p_createTime
              FROM users t1 LEFT JOIN providers t2 ON t1.providerId = t2.id
          </otherwise>
        </choose>
    </select>

    <select id="find" parameterType="Map" resultType="User">
          SELECT * FROM users
        <where>
          <if test="email!=null">email LIKE concat('%',#{email},'%')</if>
          <if test="tel!=null">AND tel LIKE concat('%',#{tel},'%')</if>
        </where>
        <if test="sort!=null">
            ORDER BY ${sort}
            <choose>
                <when test="dir!=null">${dir}</when>
                <otherwise>ASC</otherwise>
            </choose>
        </if>

            LIMIT #{pageOffset},#{pageSize}


    </select>

    <select id="find_count" parameterType="Map" resultType="int">
          SELECT count(*) FROM users
        <where>
            <if test="email!=null">email LIKE concat('%',#{email},'%')</if>
            <if test="tel!=null">AND tel LIKE concat('%',#{tel},'%')</if>
        </where>
    </select>

    <insert id="insert" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users VALUES(null, #{email},#{name},#{password},#{printCount},#{tel},#{createTime},#{updateTime},#{provider.id})
    </insert>

    <update id="update" parameterType="User">
        UPDATE Users SET email = #{email},name = #{name},password = #{password},printCount = #{printCount},tel = #{tel},providerId = #{provider.id}
        WHERE id = #{id}
    </update>

    <!-->两种delete都指向这一个SQL<-->
    <delete id="delete" parameterType="User">
        DELETE FROM Users
        WHERE id = #{id}
    </delete>

</mapper>